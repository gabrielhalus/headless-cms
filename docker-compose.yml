version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - backend
    networks:
      - app
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - app
    restart: always

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app
    restart: always

  nginx:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cms.gabrielhalus.com.conf:/etc/nginx/conf.d/cms.gabrielhalus.com.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app
    restart: always

networks:
  app:

volumes:
  postgres-data:
